#version 440 core

// Process particles in blocks of 128
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
// SSBO binding
layout(std430, binding = 0) buffer PositionBuffer { vec4 positions[]; };
layout(std430, binding = 1) buffer Orig_PositionBuffer { vec4 original_positions[]; };
layout(std430, binding = 2) buffer VelocityBuffer { vec4 velocities[]; };
layout(std430, binding = 3) buffer DistanceBuffer { float distances[]; };

// Delta time
uniform float delta_time;
uniform float max_distance;

void main(void) {
	uint index = gl_GlobalInvocationID.x;

	// Read the current position and velocity from the buffers
	vec4 vel = velocities[index];
	vec4 pos = positions[index];
	float d = distances[index];

	// *********************************
	// Upadte new_pos
	vec4 new_pos = pos + vel * delta_time * 0.2;
	d += distance(pos, new_pos);
	// *********************************

	if (d > 2.0)
	{
		new_pos = original_positions[index];
		d = 0.0;
	}

	// Store the new position and velocity back into the buffers
	positions[index] = new_pos;
	distances[index] = d;
}